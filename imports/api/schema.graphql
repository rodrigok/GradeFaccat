scalar JSON

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type Email {
  address: String
  verified: Boolean
}

type User {
  _id: String
  mainEmail: Email
  admin: Boolean
  emails: [Email]
  grade: JSON
}

type Teacher {
  _id: String
  name: String
}

type CalendarItem {
  _id: String
  day: String
  shift: String
  interested: Float
  teacher: Teacher
}

type Calendar {
  _id: String
  grade: [CalendarItem]
}

type Grade {
  _id: String
  semester: String
  code: String
  name: String
  requirement: [Grade]
  credit: Float
  workload: Float
}

type Course {
  _id: String
  name: String
}

type Query {
  user: User
  teachers: [Teacher]
  calendars: [Calendar]
  grades(course: String): [Grade]
  courses: [Course]
}

type Mutation {
  updateGradeItem(
      _id: String!
      status: String!
  ): User

  addTeacher(
    name: String!
  ): Teacher

  updateTeacher(
    _id: String!
    name: String!
  ): Teacher

  addCourse(
    name: String!
  ): Course

  updateCourse(
    _id: String!
    name: String!
  ): Course
}

type Subscription {
  user: User
}
